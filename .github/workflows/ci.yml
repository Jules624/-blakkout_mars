name: CI Pipeline

# Trigger the workflow on push and pull requests to main branch
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

# Set default permissions
permissions:
  contents: read
  pull-requests: write

jobs:
  # Job 1: Code quality checks
  lint-and-type-check:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Type check with TypeScript
        run: npx tsc --noEmit

  # Job 2: Build and test
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Next.js application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            public/
          retention-days: 1

  # Job 3: Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level=high
        
      - name: Check for vulnerabilities
        run: npm audit --audit-level=critical

  # Job 4: Performance and bundle analysis
  analyze:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install bundle analyzer
        run: npm install --save-dev @next/bundle-analyzer
        
      - name: Build with bundle analysis
        run: |
          echo "const withBundleAnalyzer = require('@next/bundle-analyzer')({ enabled: true })" > analyze.js
          echo "module.exports = withBundleAnalyzer(require('./next.config.js'))" >> analyze.js
          ANALYZE=true npm run build
        env:
          NODE_ENV: production

  # Job 5: Deployment preview (optional)
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build-and-test, security-audit]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      # Add your deployment step here (Vercel, Netlify, etc.)
      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Preview deployment ready! Check the build artifacts for details.'
            })